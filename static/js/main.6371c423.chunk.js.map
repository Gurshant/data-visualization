{"version":3,"sources":["components/GroupedBarChart.tsx","components/CheckBoxes.tsx","components/Paper.tsx","utils/firebase.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["GroupedBarChart","rawData","ageGroups","colorScale","VictoryZoomVoronoiContainer","createContainer","style","paddingLeft","padding","top","left","bottom","right","domainPadding","width","height","scale","x","horizontal","containerComponent","labels","datum","ethnicity","_stack","year","getFullYear","value","text","y","textAnchor","fontSize","fontWeight","angle","orientation","gutter","border","stroke","data","ethArr","forEach","group","show","push","name","legendTitles","offset","map","i","index","useStyles","makeStyles","theme","createStyles","root","display","justifyContent","filter","CheckBoxes","handleChange","classes","error","v","length","className","FormControl","required","component","Typography","variant","noWrap","FormGroup","FormControlLabel","control","Checkbox","checked","onChange","disabled","color","label","FormHelperText","drawer","flexShrink","drawerPaper","toolbar","mixins","content","flexGrow","backgroundColor","palette","background","default","spacing","Paper","Drawer","paper","anchor","Divider","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","loading","App","useState","dataByEthnicity","setDataByEthnicity","setAgeGroups","setLoading","dbRef","database","ref","useEffect","items","on","snapshot","console","log","val","Object","keys","key","segment","includes","level_2","inserted","item","level_1","indexOf","Date","ETH","YEAR","VAL","parseInt","getPopulation","CircularProgress","size","thickness","CssBaseline","tmp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6371c423.chunk.js","sourcesContent":["import React from 'react';\nimport {VictoryChart,  VictoryStack, VictoryBar, VictoryGroup, VictoryLegend, VictoryLabel, createContainer, VictoryVoronoiContainerProps, VictoryZoomContainerProps} from 'victory';\nimport {ColorScalePropType} from \"victory-core\";\nimport {IState as IProps} from '../App';\n\ninterface Props{\n  rawData: IProps[\"ethnicityData\"];\n  ageGroups: IProps[\"ageGroups\"];\n}\n\nconst GroupedBarChart:React.FC<Props> = ({rawData, ageGroups})=> {\n  \n  const colorScale: ColorScalePropType[] = [\"red\", \"blue\", \"green\", \"cool\",  \"grayscale\", \"red\", \"blue\", \"green\", \"cool\",  \"grayscale\"  ];\n\n  const stringArr: string[] = [\"red\", \"blue\", \"green\", \"turquoise\", \"grey\", \"red\", \"blue\", \"green\", \"turquoise\", \"grey\" ];\n\n  const legendTitles=()=>{\n    let ethArr: { name: string}[] =[];\n    rawData.forEach((group)=>group.show?  ethArr.push({name: group.ethnicity}) : null );\n    return ethArr;\n  }\n\n  const VictoryZoomVoronoiContainer = createContainer<VictoryZoomContainerProps, VictoryVoronoiContainerProps>('zoom', 'voronoi');\n\n  return (\n    <div style={{paddingLeft: '10px'}}>\n      <VictoryChart   padding={{top: 100, left: 100, bottom: 50, right: 30}}  domainPadding={60} width={1000} height={550} scale={{x: \"time\"}} horizontal={false}\n        containerComponent={\n          <VictoryZoomVoronoiContainer\n            labels={({ datum }) => datum.ethnicity + \" Population of \\n\" + ageGroups[datum._stack - 1] + \" olds in \" + datum.year.getFullYear() + \": \\n\" + datum.value}\n          />}\n      >\n\n        <VictoryLabel text=\"Visual Analysis: Singapore Population Breakdown\" x={500} y={30} textAnchor=\"middle\" style={{fontSize: 20, fontWeight: \"bold\"}}/>\n        <VictoryLabel text=\"Year\" x={500} y={530} textAnchor=\"middle\" style={{fontSize: 16, fontWeight: \"bold\" }}/>\n        <VictoryLabel text=\"Population Size\" x={10} y={225} textAnchor=\"middle\" style={{fontSize: 16, fontWeight: \"bold\" }} angle= {270}/>\n        <VictoryLegend x={175} y={55}\n          orientation=\"horizontal\"\n          gutter={20}\n          style={{ border: { stroke: \"black\" } }}\n          colorScale={stringArr}\n          data={legendTitles()} />\n\n        <VictoryGroup offset={15} style={{ data: { width: 12 } }}>\n          {rawData.map((group, i)=> group.show ? <VictoryStack colorScale={colorScale[i]} key={i}>\n              {group.data.map((data, index) => <VictoryBar key={index} data={data} x=\"year\" y= \"value\" /> )}\n            </VictoryStack> : null\n          )}\n        </VictoryGroup>\n      </VictoryChart>\n    </div>\n  );\n\n}\n\nexport default GroupedBarChart;\n\n","import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport {IState as IProps} from '../App';\nimport { Typography } from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      justifyContent: 'center',\n    },\n    filter:{\n      display: 'flex',\n      justifyContent: 'flex-start',\n      padding: 20\n    }\n  }),\n);\n\ninterface Props{\n  rawData: IProps[\"ethnicityData\"];\n  handleChange: IProps[\"handlePropStateChanges\"]\n\n}\n\nconst CheckBoxes:React.FC<Props> = ({rawData, handleChange}) => { \n  const classes = useStyles();\n\n  const error = rawData.filter((v) => v.show).length >= 5;\n  return (\n    <div className={classes.root}>\n      <FormControl required  component=\"fieldset\" >\n          <Typography variant=\"h6\" noWrap>\n           Filters\n          </Typography>\n\n        <FormGroup>\n          {rawData.map((group, i)=> <FormControlLabel\n            control={<Checkbox checked={group.show} onChange={()=>{handleChange(group.ethnicity )}} name={group.ethnicity} disabled={i === 0 || (error && !group.show) ? true: false} className={classes.filter} color={'primary'}/>}\n            label={group.ethnicity} key={i}\n          />\n          )}\n        </FormGroup>\n        <FormHelperText className={classes.filter}>Note: Cannot select more than 5 filters</FormHelperText>\n      </FormControl>\n    </div>\n  );\n}\n\nexport default CheckBoxes;","import React from 'react';\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Divider from '@material-ui/core/Divider';\nimport {IState as IProps} from '../App';\nimport GroupedBarChart from './GroupedBarChart';\nimport CheckBoxes from './CheckBoxes';\n\nconst drawerWidth = 300;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    // necessary for content to be below app bar\n    toolbar: theme.mixins.toolbar,\n    content: {\n      flexGrow: 1,\n      backgroundColor: theme.palette.background.default,\n      padding: theme.spacing(3),\n    },\n  }),\n);\n\ninterface Props{\n  rawData: IProps[\"ethnicityData\"];\n  \n  handleChange: IProps[\"handlePropStateChanges\"];\n\n  ageGroups: IProps[\"ageGroups\"];\n\n}\n\nconst Paper:React.FC<Props> = ({rawData, handleChange, ageGroups}) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n\n      <main className={classes.content}>\n        <GroupedBarChart rawData={rawData} ageGroups = {ageGroups}/>\n      </main>\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n        anchor=\"right\"\n      >\n        <div className={classes.toolbar} />\n        <CheckBoxes rawData={rawData} handleChange={handleChange} />\n        <Divider />\n      </Drawer>\n    </div>\n  );\n}\n\nexport default Paper;\n\n","import firebase from 'firebase/app';\nimport 'firebase/database';    // for realtime database\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyD_ENUiMdHvQHHQVXac_choleElOmg7Uv8\",\n    authDomain: \"singapore-population-3dc7b.firebaseapp.com\",\n    projectId: \"singapore-population-3dc7b\",\n    storageBucket: \"singapore-population-3dc7b.appspot.com\",\n    messagingSenderId: \"740592941650\",\n    appId: \"1:740592941650:web:3b167fd71ac78eb570bd8b\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  export default firebase;","import { useState, useEffect } from 'react';\nimport './App.css';\nimport Paper from './components/Paper';\nimport firebase from './utils/firebase';\nimport { CircularProgress, createStyles, CssBaseline, makeStyles, Theme } from '@material-ui/core';\n\nexport interface IState{\n  ageGroups: string[],\n\n  valueByYear:{\n    ethnicity: string;\n    year: Date;\n    value: number;\n  }[],\n\n  ethnicityData:{\n    ethnicity: string;\n    show: boolean;\n    data: IState[\"valueByYear\"][]\n  }[],\n\n  handlePropStateChanges: (ethnicity: string) => void;\n}\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    loading:{\n      display: 'flex',\n      justifyContent: 'center',\n    }\n  }),\n);\n\nconst App = () => {\n  const [dataByEthnicity, setDataByEthnicity ] = useState<IState[\"ethnicityData\"]>([]);\n  const [ageGroups, setAgeGroups ] = useState<IState[\"ageGroups\"]>([]);\n  const [loading, setLoading] = useState(true);\n\n  const classes = useStyles();\n  const dbRef = firebase.database().ref(\"singapore-population\");\n\n  const getPopulation=()=>{\n    let items: IState[\"ethnicityData\"]=[];\n    let ageGroups: IState[\"ageGroups\"]=[];\n\n    dbRef.on(\"value\",(snapshot)=>{\n      console.log(snapshot.val());\n      Object.keys(snapshot.val()).forEach((key: any)=>{\n        let segment = snapshot.val()[key];\n        if(!ageGroups.includes(segment.level_2)){\n          ageGroups.push(segment.level_2);\n        }\n\n        let inserted= false;\n        items.forEach((item, i)=>{\n          if(segment.level_1 === item.ethnicity ){\n            let i = ageGroups.indexOf(segment.level_2);\n            if(typeof item.data[i]  === 'undefined' ){\n              item.data.push([{\n                year: new Date(segment.year,1,1),\n                value: segment.value,\n                ethnicity: item.ethnicity\n              }]);\n              inserted= true;\n            }else{\n              item.data[i].push({\n                year: new Date(segment.year,1,1),\n                value: segment.value,\n                ethnicity: item.ethnicity\n              })\n              inserted=true;\n            }\n          }\n        })\n        if(inserted===false){\n          const ETH = segment.level_1+\"\";\n          const YEAR = new Date(segment.year,1,1);\n          const VAL = parseInt(segment.value)\n          items.push({ethnicity: ETH, show: false, data: [[{ year: YEAR,value: VAL, ethnicity: ETH}]]});\n        }\n      });\n      items[0].show=true;\n      setDataByEthnicity(items);\n      setAgeGroups(ageGroups);\n      setLoading(false);\n    });\n  }\n\n  const handleChange=(ethnicity: string)=>{\n    let tmp = [...dataByEthnicity];\n    tmp.map((group)=> group.ethnicity === ethnicity ? group.show = !group.show : null);\n    setDataByEthnicity(tmp);\n  }\n\n  useEffect(()=>{\n    getPopulation();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if(loading){\n    return <div className={classes.loading}><\n      CircularProgress size={400}  thickness={1.8} className={classes.loading} color={'primary'}/> \n    </div>\n  }\n  return (\n    <div className=\"App\">\n      <CssBaseline />\n      <Paper rawData={dataByEthnicity} handleChange={handleChange}  ageGroups = {ageGroups}/>\n    </div> \n  );\n}\n\nexport default App;\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}